---
- name: Info collections
  check_mode: false
  block:
  - name: Set complete API url for repo runner
    ansible.builtin.set_fact:
      github_full_api_url: "{{ github_api_url }}/repos/{{ github_owner | default(github_account) }}/{{ github_repo }}/actions/runners"
    when: not runner_org

  - name: Set complete API url for org runner
    ansible.builtin.set_fact:
      github_full_api_url: "{{ github_api_url }}/orgs/{{ github_owner | default(github_account) }}/actions/runners"
    when: runner_org | bool

  - name: Get registration token (RUN ONCE)
    ansible.windows.win_uri:
      url: "{{ github_full_api_url }}/registration-token"
      headers:
        Authorization: "token {{ access_token }}"
        Accept: "application/vnd.github.v3+json"
      method: POST
      status_code: 201
      force_basic_auth: yes
      return_content: true
    register: registration
    run_once: true

  - name: Check currently registered runners for repo or org (RUN ONCE)
    ansible.windows.win_uri:
      url: "{{ github_full_api_url }}"
      headers:
        Authorization: "token {{ access_token }}"
        Accept: "application/vnd.github.v3+json"
      method: GET
      status_code: 200
      return_content: true
      force_basic_auth: yes
    register: registered_runners
    run_once: true

  - debug:
      msg: "{{ registered_runners.json.runners|map(attribute='name')|list }}"

  - name: Get Runner User IDs
    ansible.windows.win_whoami:
    changed_when: false
    register: runner_user_id #use with runner_user_id.sid

  - name: Get Runner Group IDs
    ansible.windows.win_whoami:
    changed_when: false
    register: runner_user_group_id #use with runner_user_group_id.sid
    
  - name: Set runner_system variable
    ansible.builtin.set_fact:
      runner_system: "{{ 'win' }}"
    when: ansible_system == "Win32NT"

  - name: Find the latest runner version (RUN ONCE)
    ansible.builtin.uri:
      url: "https://api.github.com/repos/{{ runner_download_repository }}/releases/latest"
      headers:
        Content-Type: "application/json"
      method: GET
      return_content: yes
      status_code: 200
      body_format: json
    check_mode: false
    register: api_response
    run_once: true
    become: false
    delegate_to: localhost
    when: runner_version == "latest"

  # - name: Get systemd service facts
  #   ansible.builtin.service_facts:
  #   register: service_facts
  #   when: ansible_system == "Linux"
